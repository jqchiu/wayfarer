{"ast":null,"code":"var _jsxFileName = \"/Users/im_jacamo/Documents/General-Assembly/code/Homework-Deliverables/Project/Project-Wayfare/wayfarer-ABJJ/src/components/CityShow.js\";\nimport React from 'react';\nimport PostList from './PostList';\nimport CityList from './CityList';\nimport image1 from '../images/san-fran.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CityShow extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      posts: []\n    };\n\n    this.updatePosts = () => {\n      console.log('update hit');\n      fetch(`https://abjj-wayfarer-api.herokuapp.com/posts`).then(res => res.json()).then(jsonData => {\n        const filteredPosts = jsonData.filter(post => {\n          return post.city === this.props.currentCity._id;\n        });\n        this.setState({\n          posts: filteredPosts\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.deletePost = (postId, cityId) => {\n      let confirmed = window.confirm('Are you sure?');\n\n      if (confirmed) {\n        //FIlters out the deleted post from the post state. but it returns when you refresh the page cause there is no db call\n        fetch(`https://abjj-wayfarer-api.herokuapp.com/post/${postId}`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            _id: postId,\n            city: cityId\n          })\n        }).then(res => res.json()).then(jsonData => {\n          console.log(jsonData);\n          const filteredPosts = this.state.posts.filter(post => {\n            return postId !== post._id;\n          });\n          this.setState({\n            posts: filteredPosts\n          });\n        });\n      }\n    };\n\n    this.updatePosts = this.updatePosts.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(`https://abjj-wayfarer-api.herokuapp.com/posts`).then(res => res.json()).then(jsonData => {\n      const filteredPosts = jsonData.filter(post => {\n        return post.city === this.props.currentCity._id;\n      });\n      this.setState({\n        posts: filteredPosts\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    console.log(this.props.cities);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CityList, {\n        cities: this.props.cities,\n        currentCity: this.props.currentCity,\n        updateCurrentCity: this.props.updateCurrentCity,\n        updatePosts: this.updatePosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid right-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row city-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col city-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"CityName\",\n              children: this.props.currentCity.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"CitySubtitle\",\n              children: this.props.currentCity.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col city-image\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: image1,\n              id: \"main-city-image\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-button\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-plus-circle\",\n                id: \"plusBtn\",\n                onClick: this.props.showForm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-container\",\n          children: /*#__PURE__*/_jsxDEV(PostList, {\n            postData: this.state.posts,\n            deletePost: this.deletePost,\n            updatePosts: this.updatePosts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default CityShow;","map":{"version":3,"sources":["/Users/im_jacamo/Documents/General-Assembly/code/Homework-Deliverables/Project/Project-Wayfare/wayfarer-ABJJ/src/components/CityShow.js"],"names":["React","PostList","CityList","image1","CityShow","Component","constructor","state","posts","updatePosts","console","log","fetch","then","res","json","jsonData","filteredPosts","filter","post","city","props","currentCity","_id","setState","catch","err","deletePost","postId","cityId","confirmed","window","confirm","method","headers","body","JSON","stringify","bind","componentDidMount","render","cities","updateCurrentCity","name","country","showForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PostList from './PostList'\nimport CityList from './CityList';\nimport image1 from '../images/san-fran.jpg';\n\n\nclass CityShow extends React.Component {\n  constructor() {\n    super()\n    this.updatePosts = this.updatePosts.bind(this)\n  }\n  state = {\n    posts: []\n  }\n\n  componentDidMount() {\n    fetch(`https://abjj-wayfarer-api.herokuapp.com/posts`)\n      .then((res) => res.json())\n      .then((jsonData) => {\n        const filteredPosts = jsonData.filter((post) => {\n          return post.city === this.props.currentCity._id\n        })\n        this.setState({posts: filteredPosts})\n    })\n    .catch((err) => console.log(err))\n  }\n\n  updatePosts = () => {\n    console.log('update hit')\n    fetch(`https://abjj-wayfarer-api.herokuapp.com/posts`)\n      .then((res) => res.json())\n      .then((jsonData) => {\n        const filteredPosts = jsonData.filter((post) => {\n          return post.city === this.props.currentCity._id\n        })\n        this.setState({posts: filteredPosts})\n    })\n    .catch((err) => console.log(err))\n  }\n\n  deletePost = (postId, cityId) => {\n    let confirmed = window.confirm('Are you sure?');\n    if (confirmed) {\n    //FIlters out the deleted post from the post state. but it returns when you refresh the page cause there is no db call\n    fetch(`https://abjj-wayfarer-api.herokuapp.com/post/${postId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({_id: postId, city: cityId})\n    }).then((res) => res.json())\n      .then((jsonData) => {\n        console.log(jsonData)\n        const filteredPosts = this.state.posts.filter((post) => {\n        return postId !== post._id\n        });\n        this.setState({\n          posts: filteredPosts\n        }) \n      })\n    }\n  }\n\n\n  render() {\n    console.log(this.props.cities)\n    return (\n      <>\n        <CityList cities={\n            this.props.cities\n          }\n          currentCity={\n            this.props.currentCity\n          }\n          updateCurrentCity={\n            this.props.updateCurrentCity\n          }\n          updatePosts={this.updatePosts}\n\n          />\n\n        <div className=\"container-fluid right-column\">\n          <div className=\"row city-content\">\n\n            <div className=\"col city-name\">\n              <p className=\"CityName\">{this.props.currentCity.name}</p>\n              <p className=\"CitySubtitle\">{this.props.currentCity.country}</p>\n            </div>\n\n            <div className=\"col city-image\">\n              <img src={image1} id=\"main-city-image\" alt=\"\"/>\n              <div className=\"create-button\">\n              <i className=\"fas fa-plus-circle\" id=\"plusBtn\" onClick={this.props.showForm}></i>\n              </div>\n              {/* {this.props.cities[0].image} */}\n            </div>\n\n          </div>\n\n          <div className=\"post-container\">\n            <PostList \n            postData={this.state.posts}\n            deletePost={this.deletePost}\n            updatePosts={this.updatePosts}\n            />\n          </div>\n\n        </div>\n      </>\n\n    )\n  }\n\n\n}\n\nexport default CityShow;\n"]},"metadata":{},"sourceType":"module"}