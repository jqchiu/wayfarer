{"ast":null,"code":"var _jsxFileName = \"/Users/im_jacamo/Documents/General-Assembly/code/Homework-Deliverables/Project/Project-Wayfare/wayfarer-ABJJ/src/components/CityShow.js\";\nimport React from 'react';\nimport PostList from './PostList';\nimport CityList from './CityList';\nimport ReactDOM from 'react-dom';\nimport DynamicForm from './DynamicForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CityShow extends React.Component {\n  constructor() {\n    super();\n\n    this.postFetcher = () => {\n      fetch(`https://abjj-wayfarer-api.herokuapp.com/posts`).then(res => res.json()).then(jsonData => {\n        const filteredPosts = jsonData.filter(post => {\n          return post.city === this.props.currentCity._id;\n        });\n        this.setState({\n          posts: filteredPosts,\n          currentCity: this.props.currentCity\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.updatePosts = () => {\n      console.log('new post called');\n      this.postFetcher();\n    };\n\n    this.deletePost = (postId, cityId) => {\n      let confirmed = window.confirm('Are you sure?');\n\n      if (confirmed) {\n        fetch(`https://abjj-wayfarer-api.herokuapp.com/post/`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            _id: postId,\n            city: cityId\n          })\n        }).then(res => res.json()).then(jsonData => {\n          // console.log(jsonData)\n          const filteredPosts = this.state.posts.filter(post => {\n            return postId !== post._id;\n          });\n          this.setState({\n            posts: filteredPosts\n          });\n        });\n      }\n    };\n\n    this.showForm = () => {\n      ReactDOM.render( /*#__PURE__*/_jsxDEV(DynamicForm, {\n        closeForm: this.closeForm,\n        currentCity: this.state.currentCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), document.getElementById('modal-root'));\n    };\n\n    this.closeForm = () => {\n      ReactDOM.unmountComponentAtNode(document.getElementById('modal-root'));\n      this.updatePosts();\n    };\n\n    this.updatePosts = this.updatePosts.bind(this);\n    this.closeForm = this.closeForm.bind(this);\n    this.state = {\n      posts: [],\n      currentCity: {}\n    };\n  }\n\n  componentDidMount() {\n    this.postFetcher();\n  }\n\n  componentDidUpdate(prevProps) {\n    // throw postFetcher in here after if check.\n    if (this.props.currentCity._id && this.props.currentCity._id !== prevProps.currentCity._id) {\n      this.postFetcher();\n      console.log('hit it');\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CityList, {\n        cities: this.props.cities,\n        currentCity: this.props.currentCity,\n        updateCurrentCity: this.props.updateCurrentCity,\n        updatePosts: this.updatePosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid right-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row city-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col city-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"CityName\",\n              children: this.props.currentCity.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"CitySubtitle\",\n              children: this.props.currentCity.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col city-image\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.props.currentCity.image,\n              id: \"main-city-image\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-button\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                onClick: this.showForm,\n                className: \"fas fa-plus-circle\",\n                id: \"plusBtn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-container\",\n          children: /*#__PURE__*/_jsxDEV(PostList, {\n            postData: this.state.posts,\n            deletePost: this.deletePost,\n            updatePosts: this.updatePosts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default CityShow;","map":{"version":3,"sources":["/Users/im_jacamo/Documents/General-Assembly/code/Homework-Deliverables/Project/Project-Wayfare/wayfarer-ABJJ/src/components/CityShow.js"],"names":["React","PostList","CityList","ReactDOM","DynamicForm","CityShow","Component","constructor","postFetcher","fetch","then","res","json","jsonData","filteredPosts","filter","post","city","props","currentCity","_id","setState","posts","catch","err","console","log","updatePosts","deletePost","postId","cityId","confirmed","window","confirm","method","headers","body","JSON","stringify","state","showForm","render","closeForm","document","getElementById","unmountComponentAtNode","bind","componentDidMount","componentDidUpdate","prevProps","cities","updateCurrentCity","name","country","image"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PostList from './PostList'\nimport CityList from './CityList';\nimport ReactDOM from 'react-dom'\nimport DynamicForm from './DynamicForm'\n\nclass CityShow extends React.Component {\n  constructor() {\n    super()\n    this.updatePosts = this.updatePosts.bind(this)\n    this.closeForm = this.closeForm.bind(this)\n    this.state = {\n      posts: [],\n      currentCity: {}\n    }\n  }\n\n  postFetcher = () => {\n    fetch(`https://abjj-wayfarer-api.herokuapp.com/posts`).then((res) => res.json()).then((jsonData) => {\n      const filteredPosts = jsonData.filter((post) => {\n        return post.city === this.props.currentCity._id\n      })\n      this.setState({posts: filteredPosts, currentCity: this.props.currentCity})\n    }).catch((err) => console.log(err))\n  }\n\n  componentDidMount() {\n    this.postFetcher()\n  }\n\n  componentDidUpdate(prevProps) { // throw postFetcher in here after if check.\n    if (this.props.currentCity._id && this.props.currentCity._id !== prevProps.currentCity._id) {\n      this.postFetcher();\n      console.log('hit it')\n    }\n  }\n\n  updatePosts = () => {\n    console.log('new post called')\n    this.postFetcher()\n  }\n\n  deletePost = (postId, cityId) => {\n    let confirmed = window.confirm('Are you sure?');\n    if (confirmed) {\n      fetch(`https://abjj-wayfarer-api.herokuapp.com/post/`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(\n          {_id: postId, city: cityId}\n        )\n      }).then((res) => res.json()).then((jsonData) => { // console.log(jsonData)\n        const filteredPosts = this.state.posts.filter((post) => {\n          return postId !== post._id\n        });\n        this.setState({posts: filteredPosts})\n      })\n    }\n  }\n  showForm = () => {\n    ReactDOM.render (\n      <DynamicForm closeForm={\n          this.closeForm\n        }\n        currentCity={\n          this.state.currentCity\n        }/>,\n      document.getElementById('modal-root')\n    )\n  }\n\n  closeForm = () => {\n    ReactDOM.unmountComponentAtNode(document.getElementById('modal-root'))\n    this.updatePosts();\n  }\n\n  render() {\n    console.log(this.state)\n    return (\n      <>\n        <CityList cities={\n            this.props.cities\n          }\n          currentCity={\n            this.props.currentCity\n          }\n          updateCurrentCity={\n            this.props.updateCurrentCity\n          }\n          updatePosts={\n            this.updatePosts\n          }/>\n        <div className=\"container-fluid right-column\">\n          <div className=\"row city-content\">\n            <div className=\"col city-name\">\n              <p className=\"CityName\">\n                {\n                this.props.currentCity.name\n              }</p>\n              <p className=\"CitySubtitle\">\n                {\n                this.props.currentCity.country\n              }</p>\n            </div>\n            <div className=\"col city-image\">\n              <img src={\n                  this.props.currentCity.image\n                }\n                id=\"main-city-image\"\n                alt=\"\"/>\n              <div className=\"create-button\">\n                <i onClick={\n                    this.showForm\n                  }\n                  className=\"fas fa-plus-circle\"\n                  id=\"plusBtn\"></i>\n              </div>\n            </div>\n          </div>\n          <div className=\"post-container\">\n            <PostList postData={\n                this.state.posts\n              }\n              deletePost={\n                this.deletePost\n              }\n              updatePosts={\n                this.updatePosts\n              }/>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default CityShow;\n"]},"metadata":{},"sourceType":"module"}