{"ast":null,"code":"var _jsxFileName = \"/Users/im_jacamo/Documents/General-Assembly/code/Homework-Deliverables/Project/Project-Wayfare/wayfarer-ABJJ/src/components/DynamicForm.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DynamicForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      body: '',\n      city: '',\n      currentCity: '',\n      new: true\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n      console.log(this.state);\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const requestBody = {\n        city: this.state.city,\n        title: this.state.title,\n        body: this.state.body\n      };\n      console.log(`request body: ${requestBody}`);\n\n      if (requestBody.city && requestBody.title.length > 0 && requestBody.title.length < 200 && requestBody.body) {\n        console.log(`all true!`);\n\n        if (this.state.new) {\n          fetch('https://abjj-wayfarer-api.herokuapp.com/post/', {\n            method: 'post',\n            // enctype: 'multipart/form-data',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(requestBody)\n          }).then(response => {\n            // console.log(response)\n            return response.json();\n          }).then(jsonData => {// console.log(jsonData)\n          }).then(this.props.updatePosts).catch(err => {\n            throw err;\n          }).then(this.props.closeForm);\n        } else {\n          requestBody._id = this.props.post;\n          fetch('https://abjj-wayfarer-api.herokuapp.com/post/', {\n            method: 'put',\n            //enctype: 'multipart/form-data',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(requestBody)\n          }).then(response => {\n            // console.log(response)\n            return response.json();\n          }).then(jsonData => {// console.log(jsonData)\n          }).then(this.props.updatePosts).catch(err => {\n            throw err;\n          }).then(this.props.closeForm);\n        }\n      } else {\n        if (!requestBody.city) {\n          alert('Missing City!');\n        } else if (requestBody.title.length < 1) {\n          alert('Post must include a title');\n        } else if (requestBody.title.length > 200) {\n          alert('Title too long');\n        } else if (!requestBody.body) {\n          alert('Post must include a body');\n        } else {\n          alert('Unknown Error');\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.edit) {\n      this.setState({\n        new: false\n      });\n      fetch(`https://abjj-wayfarer-api.herokuapp.com/post/${this.props.post}`).then(res => res.json()).then(jsonData => {\n        this.setState({\n          city: jsonData.city,\n          title: jsonData.title,\n          body: jsonData.body\n        });\n      });\n      fetch(`https://abjj-wayfarer-api.herokuapp.com/city/${this.props.city}`).then(res => res.json()).then(jsonData => {\n        this.setState({\n          currentCity: jsonData\n        });\n      });\n    } else {\n      this.setState({\n        currentCity: this.props.currentCity,\n        city: this.props.currentCity._id\n      });\n    }\n  }\n\n  render() {\n    if (this.state.new) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mymodal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mymodalcontent\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"createTitle\",\n            children: [\"Create a New Post for \", this.state.currentCity.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"title\",\n                className: \"form-label\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"title\",\n                name: \"title\",\n                placeholder: \"Where did you go?\",\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"body\",\n                className: \"form-label\",\n                children: \"Body\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"form-control\",\n                onChange: this.handleChange,\n                name: \"body\",\n                id: \"body\",\n                rows: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col-auto\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary mb-3 createBtn\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.props.closeForm,\n                className: \"btn btn-primary mb-3 createClose\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mymodal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mymodalcontent\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"editTitle\",\n            children: [\"Edit Post on \", this.state.currentCity.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"title\",\n                className: \"form-label\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"title\",\n                name: \"title\",\n                placeholder: \"Where did you go?\",\n                onChange: this.handleChange,\n                value: this.state.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"body\",\n                className: \"form-label\",\n                children: \"Body\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"form-control\",\n                onChange: this.handleChange,\n                value: this.state.body,\n                name: \"body\",\n                id: \"body\",\n                rows: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col-auto\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary mb-3 editBtn\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.props.closeForm,\n                className: \"btn btn-primary mb-3 editClose\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this) // <div className=\"mymodal\">\n      // <div className=\"mymodalcontent\">\n      //     <h3>Edit a Post on {this.state.currentCity.name}</h3>\n      //     <form onSubmit={this.handleSubmit}>\n      //     <label htmlFor=\"title\">Title</label> <br/>\n      //     <input onChange={this.handleChange} type=\"text\" id=\"title\" name=\"title\" value={this.state.title}/> <br/>\n      //     <label htmlFor=\"body\">Body</label> <br/>\n      //     <textarea onChange={this.handleChange} name=\"body\" id=\"body\" cols=\"19\" rows=\"5\" value={this.state.body}></textarea>\n      //     <br/>\n      //     <button type=\"submit\" >Submit</button>\n      //     <button onClick={this.props.closeForm}>Close</button>\n      //     </form>\n      // </div></div>\n      ;\n    }\n  }\n\n}\n\nexport default DynamicForm;","map":{"version":3,"sources":["/Users/im_jacamo/Documents/General-Assembly/code/Homework-Deliverables/Project/Project-Wayfare/wayfarer-ABJJ/src/components/DynamicForm.js"],"names":["React","DynamicForm","Component","state","title","body","city","currentCity","new","handleChange","event","setState","target","id","value","console","log","handleSubmit","preventDefault","requestBody","length","fetch","method","headers","JSON","stringify","then","response","json","jsonData","props","updatePosts","catch","err","closeForm","_id","post","alert","componentDidMount","edit","res","render","name"],"mappings":"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","sourcesContent":["import React from 'react'\n\nclass DynamicForm extends React.Component {\n    state = {\n        title: '',\n        body: '',\n        city: '',\n        currentCity: '',\n        new: true\n    }\n\n    componentDidMount() {\n        if (this.props.edit) {\n            this.setState({new: false})\n            fetch(`https://abjj-wayfarer-api.herokuapp.com/post/${this.props.post}`)\n            .then((res) => res.json())\n            .then((jsonData) => {\n                this.setState({city: jsonData.city, title: jsonData.title, body: jsonData.body})\n            })\n            fetch(`https://abjj-wayfarer-api.herokuapp.com/city/${this.props.city}`)\n                .then((res) => res.json())\n                .then((jsonData) => {\n                    this.setState({currentCity: jsonData})\n                })\n        } else {this.setState({currentCity: this.props.currentCity, city: this.props.currentCity._id})}\n        \n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.id]: event.target.value\n        })\n        console.log(this.state)\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const requestBody = {\n            city: this.state.city,\n            title: this.state.title,\n            body: this.state.body\n          }\n        console.log(`request body: ${requestBody}`)\n        if (requestBody.city && (requestBody.title.length > 0) && (requestBody.title.length < 200) && requestBody.body) {\n            console.log(`all true!`)\n            if (this.state.new) {\n                fetch('https://abjj-wayfarer-api.herokuapp.com/post/', {\n                    method: 'post',\n                    // enctype: 'multipart/form-data',\n                    headers: {\n                      'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(requestBody)\n                  })\n                  .then((response) => {\n                    // console.log(response)\n                    return response.json()\n                  })\n                  .then((jsonData) => {\n                    // console.log(jsonData)\n                  })\n                  .then(this.props.updatePosts) \n                  .catch((err) => {throw err})\n                  .then(this.props.closeForm)\n                } else {\n                requestBody._id = this.props.post\n                fetch('https://abjj-wayfarer-api.herokuapp.com/post/', {\n                    method: 'put',\n                    //enctype: 'multipart/form-data',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(requestBody)\n                })\n                .then((response) => {\n                    // console.log(response)\n                return response.json()\n                  })\n                .then((jsonData) => {\n                    // console.log(jsonData)\n                  })\n                .then(this.props.updatePosts) \n                .catch((err) => {throw err})\n                .then(this.props.closeForm)\n            }\n        } else {\n            if (!requestBody.city) {alert('Missing City!')}\n            else if (requestBody.title.length < 1) {alert('Post must include a title')}\n            else if (requestBody.title.length > 200) {alert('Title too long')}\n            else if (!requestBody.body) {alert('Post must include a body')}\n            else {alert('Unknown Error')}\n        }\n    }\n\n    render() {\n\n        if (this.state.new) {\n            return(\n                <div className=\"mymodal\">\n                    <div className=\"mymodalcontent\">\n                    <h3 className=\"createTitle\">Create a New Post for {this.state.currentCity.name}</h3>\n                        <form onSubmit={this.handleSubmit}>\n                        <div className=\"mb-3\">\n                            <label htmlFor=\"title\" className=\"form-label\">Title</label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                id=\"title\" \n                                name=\"title\" \n                                placeholder=\"Where did you go?\" \n                                onChange={this.handleChange}\n                            />\n                        </div>\n                        <div className=\"mb-3\">\n                            <label htmlFor=\"body\" className=\"form-label\">Body</label>\n                            <textarea \n                                className=\"form-control\" \n                                onChange={this.handleChange} \n                                name=\"body\" \n                                id=\"body\" \n                                rows=\"3\">\n                            </textarea>\n                        </div>\n                        <div class=\"col-auto\">\n                            <button type=\"submit\" className=\"btn btn-primary mb-3 createBtn\">Submit</button>\n                            <button onClick={this.props.closeForm} className=\"btn btn-primary mb-3 createClose\">Close</button>\n                        </div>\n                        </form>\n                    </div>\n                </div>\n            )\n        } else {\n            return(\n                <div className=\"mymodal\">\n                <div className=\"mymodalcontent\">\n                <h3 className=\"editTitle\">Edit Post on {this.state.currentCity.name}</h3>\n                    <form onSubmit={this.handleSubmit}>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"title\" className=\"form-label\">Title</label>\n                        <input \n                            type=\"text\" \n                            className=\"form-control\" \n                            id=\"title\"\n                            name=\"title\"\n                            placeholder=\"Where did you go?\" \n                            onChange={this.handleChange} \n                            value={this.state.title} \n                        />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"body\" className=\"form-label\">Body</label>\n                        <textarea \n                            className=\"form-control\"\n                            onChange={this.handleChange}\n                            value={this.state.body} \n                            name=\"body\" \n                            id=\"body\" \n                            rows=\"3\">\n                        </textarea>\n                    </div>\n                    <div class=\"col-auto\">\n                        <button type=\"submit\" className=\"btn btn-primary mb-3 editBtn\">Submit</button>\n                        <button onClick={this.props.closeForm} className=\"btn btn-primary mb-3 editClose\">Close</button>\n                    </div>\n                    </form>\n                </div>\n            </div>\n\n                // <div className=\"mymodal\">\n                // <div className=\"mymodalcontent\">\n                //     <h3>Edit a Post on {this.state.currentCity.name}</h3>\n                //     <form onSubmit={this.handleSubmit}>\n                //     <label htmlFor=\"title\">Title</label> <br/>\n                //     <input onChange={this.handleChange} type=\"text\" id=\"title\" name=\"title\" value={this.state.title}/> <br/>\n                //     <label htmlFor=\"body\">Body</label> <br/>\n                //     <textarea onChange={this.handleChange} name=\"body\" id=\"body\" cols=\"19\" rows=\"5\" value={this.state.body}></textarea>\n                //     <br/>\n                //     <button type=\"submit\" >Submit</button>\n                //     <button onClick={this.props.closeForm}>Close</button>\n                //     </form>\n                // </div></div>\n            )\n        }\n    }\n}\nexport default DynamicForm"]},"metadata":{},"sourceType":"module"}