{"ast":null,"code":"var _jsxFileName = \"/Users/im_jacamo/Documents/General-Assembly/code/Homework-Deliverables/Project/Project-Wayfare/wayfarer-ABJJ/src/components/DynamicForm.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DynamicForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cities: [],\n      city: '603555c12b0cc300154fea34',\n      //Hardcoded San Francisco as the default city value to stop my suffering\n      title: '',\n      body: '',\n      new: true\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n      console.log(this.state);\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const requestBody = {\n        city: this.state.city,\n        title: this.state.title,\n        body: this.state.body\n      };\n\n      if (this.state.new) {\n        fetch('https://abjj-wayfarer-api.herokuapp.com/post/', {\n          method: 'post',\n          // enctype: 'multipart/form-data',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(requestBody)\n        }).then(response => {\n          // console.log(response)\n          return response.json();\n        }).then(jsonData => {// console.log(jsonData)\n        }).catch(err => {\n          throw err;\n        }).then(this.props.closeForm);\n      } else {\n        requestBody._id = this.props.post;\n        fetch('https://abjj-wayfarer-api.herokuapp.com/post/', {\n          method: 'put',\n          //enctype: 'multipart/form-data',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(requestBody)\n        }).then(response => {\n          // console.log(response)\n          return response.json();\n        }).then(jsonData => {// console.log(jsonData)\n        }).catch(err => {\n          throw err;\n        }).then(this.props.closeForm);\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.edit) {\n      this.setState({\n        new: false\n      });\n      fetch(`https://abjj-wayfarer-api.herokuapp.com/post/${this.props.post}`).then(res => res.json()).then(jsonData => {\n        this.setState({\n          city: jsonData.city\n        });\n        this.setState({\n          title: jsonData.title\n        });\n        this.setState({\n          body: jsonData.body\n        });\n      });\n    }\n\n    fetch(`https://abjj-wayfarer-api.herokuapp.com/cities/`).then(res => res.json()).then(jsonData => {\n      this.setState({\n        cities: jsonData\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    const options = [];\n\n    for (let city of this.state.cities) {\n      options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: city._id,\n        children: city.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 24\n      }, this));\n    }\n\n    if (this.state.new) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mymodal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mymodalcontent\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create a New Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"city\",\n              id: \"city\",\n              onChange: this.handleChange,\n              children: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 62\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.handleChange,\n              type: \"text\",\n              id: \"title\",\n              name: \"title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 100\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"body\",\n              children: \"Body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 60\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              onChange: this.handleChange,\n              name: \"body\",\n              id: \"body\",\n              cols: \"19\",\n              rows: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.props.closeForm,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mymodal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mymodalcontent\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Edit a Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 58\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.handleChange,\n              type: \"text\",\n              id: \"title\",\n              name: \"title\",\n              value: this.state.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 120\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"body\",\n              children: \"Body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 21\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 56\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              onChange: this.handleChange,\n              name: \"body\",\n              id: \"body\",\n              cols: \"19\",\n              rows: \"5\",\n              value: this.state.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.props.closeForm,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default DynamicForm;","map":{"version":3,"sources":["/Users/im_jacamo/Documents/General-Assembly/code/Homework-Deliverables/Project/Project-Wayfare/wayfarer-ABJJ/src/components/DynamicForm.js"],"names":["React","DynamicForm","Component","state","cities","city","title","body","new","handleChange","event","setState","target","id","value","console","log","handleSubmit","preventDefault","requestBody","fetch","method","headers","JSON","stringify","then","response","json","jsonData","catch","err","props","closeForm","_id","post","componentDidMount","edit","res","render","options","push","name"],"mappings":"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","sourcesContent":["import React from 'react'\n\nclass DynamicForm extends React.Component {\n    state = {\n        cities: [],\n        city: '603555c12b0cc300154fea34', //Hardcoded San Francisco as the default city value to stop my suffering\n        title: '',\n        body: '',\n        new: true\n    }\n\n    componentDidMount() {\n        if (this.props.edit) {\n            this.setState({new: false})\n            fetch(`https://abjj-wayfarer-api.herokuapp.com/post/${this.props.post}`)\n            .then((res) => res.json())\n            .then((jsonData) => {\n                this.setState({city: jsonData.city})\n                this.setState({title: jsonData.title})\n                this.setState({body: jsonData.body})\n            })\n        }\n        fetch(`https://abjj-wayfarer-api.herokuapp.com/cities/`)\n            .then((res) => res.json())\n            .then((jsonData) => {\n                 this.setState({cities: jsonData})\n            })\n            .catch((err) => console.log(err))\n        \n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.id]: event.target.value\n        })\n        console.log(this.state)\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const requestBody = {\n            city: this.state.city,\n            title: this.state.title,\n            body: this.state.body\n          }\n        if (this.state.new) {\n            fetch('https://abjj-wayfarer-api.herokuapp.com/post/', {\n                method: 'post',\n                // enctype: 'multipart/form-data',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(requestBody)\n              })\n              .then((response) => {\n                // console.log(response)\n                return response.json()\n              })\n              .then((jsonData) => {\n                // console.log(jsonData)\n              })\n              .catch((err) => {throw err})\n              .then(this.props.closeForm)  \n            } else {\n            requestBody._id = this.props.post\n            fetch('https://abjj-wayfarer-api.herokuapp.com/post/', {\n                method: 'put',\n                //enctype: 'multipart/form-data',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(requestBody)\n            })\n            .then((response) => {\n                // console.log(response)\n            return response.json()\n              })\n            .then((jsonData) => {\n                // console.log(jsonData)\n              })\n            .catch((err) => {throw err})\n            .then(this.props.closeForm)\n        }\n    }\n\n    render() {\n        const options = []\n        for (let city of this.state.cities) {\n          options.push(<option value={city._id}>{city.name}</option>)\n        }\n        if (this.state.new) {\n            return(\n                <div className=\"mymodal\">\n                <div className=\"mymodalcontent\">\n                    <h3>Create a New Post</h3>\n                    <form onSubmit={this.handleSubmit}>\n                        <select name=\"city\" id=\"city\" onChange={this.handleChange}>\n                            {options}\n                        </select> <br/>\n                        <label htmlFor=\"title\">Title</label> <br/>\n                        <input onChange={this.handleChange} type=\"text\" id=\"title\" name=\"title\" /> <br/>\n                        <label htmlFor=\"body\">Body</label> <br/>\n                        <textarea onChange={this.handleChange} name=\"body\" id=\"body\" cols=\"19\" rows=\"5\"></textarea>\n                        <br/>\n                        <button type=\"submit\" >Submit</button>\n                        <button onClick={this.props.closeForm}>Close</button>\n\n                    </form>\n                </div></div>\n            )\n        } else {\n            return(\n                <div className=\"mymodal\">\n                <div className=\"mymodalcontent\">\n                    <h3>Edit a Post</h3>\n                    <form onSubmit={this.handleSubmit}>\n                    {/* Changing the city of an existing post not yet supported */}\n                    {/* <select name=\"city\" id=\"city\"  onChange={this.handleChange}>\n                        <option value={this.props.city._id}>{this.props.city.name}</option>\n                        {options}\n                    </select> <br/> */}\n                    <label htmlFor=\"title\">Title</label> <br/>\n                    <input onChange={this.handleChange} type=\"text\" id=\"title\" name=\"title\" value={this.state.title}/> <br/>\n                    <label htmlFor=\"body\">Body</label> <br/>\n                    <textarea onChange={this.handleChange} name=\"body\" id=\"body\" cols=\"19\" rows=\"5\" value={this.state.body}></textarea>\n                    <br/>\n                    <button type=\"submit\" >Submit</button>\n                    <button onClick={this.props.closeForm}>Close</button>\n      </form>\n                </div></div>\n            )\n        }\n    }\n}\nexport default DynamicForm"]},"metadata":{},"sourceType":"module"}